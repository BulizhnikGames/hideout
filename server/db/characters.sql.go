// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: characters.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createCharacter = `-- name: CreateCharacter :one
INSERT INTO characters (id, game_id, main, body, health, job, hobby, phobia, inventory, info, ability)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
RETURNING id, game_id, main, body, health, job, hobby, phobia, inventory, info, ability
`

type CreateCharacterParams struct {
	ID        uuid.UUID
	GameID    uuid.UUID
	Main      sql.NullString
	Body      sql.NullString
	Health    sql.NullString
	Job       sql.NullString
	Hobby     sql.NullString
	Phobia    sql.NullString
	Inventory sql.NullString
	Info      sql.NullString
	Ability   sql.NullString
}

func (q *Queries) CreateCharacter(ctx context.Context, arg CreateCharacterParams) (Character, error) {
	row := q.db.QueryRowContext(ctx, createCharacter,
		arg.ID,
		arg.GameID,
		arg.Main,
		arg.Body,
		arg.Health,
		arg.Job,
		arg.Hobby,
		arg.Phobia,
		arg.Inventory,
		arg.Info,
		arg.Ability,
	)
	var i Character
	err := row.Scan(
		&i.ID,
		&i.GameID,
		&i.Main,
		&i.Body,
		&i.Health,
		&i.Job,
		&i.Hobby,
		&i.Phobia,
		&i.Inventory,
		&i.Info,
		&i.Ability,
	)
	return i, err
}
