// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: games.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const startGame = `-- name: StartGame :one
INSERT INTO games (id, apocalypse, size, time, food, place, rooms, resources)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
RETURNING id, apocalypse, size, time, food, place, rooms, resources
`

type StartGameParams struct {
	ID         uuid.UUID
	Apocalypse sql.NullString
	Size       sql.NullInt32
	Time       sql.NullInt32
	Food       sql.NullInt32
	Place      sql.NullString
	Rooms      sql.NullString
	Resources  sql.NullString
}

func (q *Queries) StartGame(ctx context.Context, arg StartGameParams) (Game, error) {
	row := q.db.QueryRowContext(ctx, startGame,
		arg.ID,
		arg.Apocalypse,
		arg.Size,
		arg.Time,
		arg.Food,
		arg.Place,
		arg.Rooms,
		arg.Resources,
	)
	var i Game
	err := row.Scan(
		&i.ID,
		&i.Apocalypse,
		&i.Size,
		&i.Time,
		&i.Food,
		&i.Place,
		&i.Rooms,
		&i.Resources,
	)
	return i, err
}
